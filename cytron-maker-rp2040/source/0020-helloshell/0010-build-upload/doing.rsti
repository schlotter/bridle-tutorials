.. rst-class:: page-break

   .. only:: rinoh

      |nbsp|
.. QUIRKS: Only with this dummy paragraph, the special rinohtype class
   'page-break-paragraph' react as expected. But the '.. rubric::' directive
   should also be handled as a 'ParagraphStyle' and trigger that class, But
   it doesn't work as expected. Fix this later!

.. rubric:: Durchführung

**Schließe** zunächst an deinen aktuellen Hardwareaufbau aus
:numref:`gs-hw-setup-usb-console` **die zusätzlichen Komponenten** wie in
:numref:`hs-hw-setup-zephyr-shell` dargestellten **an**. **Achte** dabei genau
**auf die richtige Polung** an der Schraubklemme für den Batteriehalter
(grüner Block, siehe :numref:`cytron-maker-pi-rp2040-vin`)
und die 3-poligen Pfostenleisten für die 4 Servo Motoren
(siehe :numref:`cytron-maker-pi-rp2040-servo`).
Einen passenden **Schraubendreher findest du in deiner "Experimentierbox"**. Die
Zuordnung der Servo Motoren spielt für uns hier keine Rolle. Jeder der 4 Servo
Motoren kann an jedem der 4 Pfostenleisten betrieben werden.

.. figure:: /_images/doing/cytron-maker-pi-rp2040-vin.*
   :name: cytron-maker-pi-rp2040-vin

   Schraubklemme für ``Vin`` auf dem *Cytron – Maker Pi RP2040*

.. figure:: /_images/doing/cytron-maker-pi-rp2040-servo.*
   :name: cytron-maker-pi-rp2040-servo

   Pfostenleisten für Servo Motoren auf dem *Cytron – Maker Pi RP2040*

.. rst-class:: page-break

-----------------------------------------------------------------------------

.. ..... BUILD ..............................................................

.. image:: /_images/symbol-coder-server-bl.*
   :class: sidecar

Hole deine **Online-Sitzung von VS Code** in den Vordergrund und **baue die
Zephyr UF2 Firmware** ``helloshell``, gib ein::

   west build -p -b cytron_maker_pi_rp2040        -S usb-console \
              bridle/samples/helloshell

-----------------------------------------------------------------------------

.. ..... FLASH ..............................................................

.. image:: /_images/symbol-rp2040-uf2-rd.*
   :class: sidecar

**Lade** dir die **Zephyr UF2 Firmware** herunter und lade diese anschließend
**auf dein MCU-Board**.

-----------------------------------------------------------------------------

.. ..... ACTION .............................................................

.. image:: /_images/symbol-observe-or.*
   :class: sidecar

Hole deinen **Terminalemulator** in den Vordergrund und **beobachte die
Ausgaben**, folgendes muss zu sehen sein:

.. parsed-literal::
   :class: code

   \*\*\*\*\* delaying boot 4000ms (per build configuration) \*\*\*\*\*
   [00:00:00.189,000] :yl:`<wrn> udc_rpi: BUS RESET`
   [00:00:00.269,000] :yl:`<wrn> udc_rpi: BUS RESET`
   \*\*\* Booting Zephyr OS build zephyr-v3.6… (delayed boot 4000ms) \*\*\*
   Hello World! I'm THE SHELL from cytron_maker_pi_rp2040
   uart:~$ _

.. include:: yourspace.rsti

.. admonition:: Nur für Mentoren
   :class: red-border bug
   :collapsible:

   In einer neu ausgerollten **virtuellen VS Code Instanz** führt der Aufruf
   von :program:`west build …` zu folgender Fehlermeldung:

   .. parsed-literal::
      :class: code

      :brd:`CMake Error at CMakeLists.txt:7 (find_package):`
        :rd:`Could not find a package configuration file provided by "Bridle"`
        :rd:`with any of the following names:`

          :rd:`BridleConfig.cmake`
          :rd:`bridle-config.cmake`

   Beseitigung **innerhalb des West Workspace** durch::

      west zephyr-export
      west bridle-export

   :download:`ZS-cytron_maker_pi_rp2040-usbcons-helloshell.uf2
   </_assets/ZS-cytron_maker_pi_rp2040-usbcons-helloshell.uf2>`
   – als Not-Backup gedacht!
